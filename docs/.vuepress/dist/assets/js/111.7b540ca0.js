(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{1080:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"react-redux-的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-redux-的使用"}},[s._v("#")]),s._v(" react-redux 的使用")]),s._v(" "),e("h2",{attrs:{id:"快速导航"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速导航"}},[s._v("#")]),s._v(" 快速导航")]),s._v(" "),e("TOC"),s._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("您将在本文当中学习到")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("react-redux")]),s._v("是什么,解决什么问题")]),s._v(" "),e("li",[e("code",[s._v("UI")]),s._v("组件以及容器组件")]),s._v(" "),e("li",[e("code",[s._v("react-redux")]),s._v("中两个重要的"),e("code",[s._v("API")]),s._v(",``Provider"),e("code",[s._v("以及")]),s._v("connect`")]),s._v(" "),e("li",[e("code",[s._v("mapStateToProps")]),s._v("以及"),e("code",[s._v("mapDispatchToProps")]),s._v("等的学习")])]),s._v(" "),e("p",[s._v("是不是搞不清楚"),e("code",[s._v("React")]),s._v("与"),e("code",[s._v("Redux")]),s._v(",以及"),e("code",[s._v("React-Redux")]),s._v("的关系?是不是不清楚"),e("code",[s._v("mapStateToProps")]),s._v("以及"),e("code",[s._v("mapDispatchToProps")]),s._v("的使用?")]),s._v(" "),e("p",[s._v("那么本文就是你想要知道的")]),s._v(" "),e("div",{attrs:{align:"center"}},[e("img",{staticClass:"medium-zoom lazy",attrs:{loading:"lazy",src:a(630),alt:"todolist"}})]),s._v(" "),e("h2",{attrs:{id:"react-redux-是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-redux-是什么"}},[s._v("#")]),s._v(" react-redux 是什么")]),s._v(" "),e("p",[s._v("以下是上节内容的代码结构,完成的一个"),e("code",[s._v("todolist")]),s._v(",并对"),e("code",[s._v("Redux")]),s._v("进行了拆分,按功能模块化管理")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("├─"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gitignore\n├─"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("lock"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json\n├─"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json\n├─"),e("span",{pre:!0,attrs:{class:"token constant"}},[s._v("README")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("md\n├─yarn"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("log\n├─yarn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock\n├─src                              "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 源代码主要目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  ├─index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js                   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 入口文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  ├─views                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 视图")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   └TodoList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  ├─store                    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Redux中store组件的公共数据状态")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   ├─actionCreators"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// action创建者")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   ├─actionTypes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// actionTypes的类型,定义成常量")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   ├─index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建store的主文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   └reducer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js                "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建的reducer")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  ├─components             "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// UI组件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     └TodoListUI"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("js\n├─"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   ├─favicon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ico\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   ├─index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   └manifest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[e("code",[s._v("Redux")])]),s._v(": 是一个用于管理组件公共状态的一个可预测状态的框架,集中管理组件的状态.核心在于"),e("code",[s._v("store")]),s._v(",它提供了"),e("code",[s._v("dispatch")]),s._v(","),e("code",[s._v("getState")]),s._v(","),e("code",[s._v("subscribe")]),s._v("方法,理解"),e("code",[s._v("Redux")]),s._v("的工作流程很重要")]),s._v(" "),e("div",{attrs:{align:"center"}},[e("img",{staticClass:"medium-zoom lazy",attrs:{loading:"lazy",src:a(631),alt:"todolist"}})]),s._v(" "),e("ul",[e("li",[e("p",[e("code",[s._v("react-redux")]),s._v(": 它是"),e("code",[s._v("redux")]),s._v("作者封装的一个库,是一个第三方的模块,对"),e("code",[s._v("Redux")]),s._v("进一步的封装简化,提供了一些额外的API(例如:"),e("code",[s._v("Provider")]),s._v(","),e("code",[s._v("connect")]),s._v("等),使用它可以更好的组织和管理我们的代码,遵循一定的组件拆分规范,在"),e("code",[s._v("React")]),s._v("中更方便的使用"),e("code",[s._v("Redux")])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("关系")]),s._v(": 它不是必须的,在实际项目中,可选用.是使用"),e("code",[s._v("Redux")]),s._v("还是使用"),e("code",[s._v("react-redux")]),s._v(",取决于你自己,项目组成员的熟悉程度,适合自己的才是最好的,使用后者提供了一些便利,但需要额外的掌握一些"),e("code",[s._v("API")]),s._v("的使用")])])]),s._v(" "),e("p",[s._v("如果只是使用"),e("code",[s._v("Redux")]),s._v(",那么流程是这样的:")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("component")]),s._v("--\x3e"),e("code",[s._v("dispatch(action)")]),s._v("--\x3e"),e("code",[s._v("reducer")]),s._v("--\x3e"),e("code",[s._v("subscribe")]),s._v("--\x3e"),e("code",[s._v("getState")]),s._v("--\x3e"),e("code",[s._v("component")]),s._v(" 这在前几篇的内容,一直都是遵循这个流程")])]),s._v(" "),e("p",[s._v("如果使用"),e("code",[s._v("react-redux")]),s._v(",那么流程是这样的:\n"),e("code",[s._v("component")]),s._v("--\x3e"),e("code",[s._v("actionCreator(data)")]),s._v("--\x3e"),e("code",[s._v("reducer")]),s._v("--\x3e"),e("code",[s._v("component")])]),s._v(" "),e("p",[s._v("在上几节内容中,我们将"),e("code",[s._v("todolist")]),s._v("的组件进行了拆分,拆分成"),e("code",[s._v("UI")]),s._v("组件(无状态组件)和容器组件,将"),e("code",[s._v("Reudcer")]),s._v("按照各个职责进行管理")]),s._v(" "),e("p",[s._v("虽然已经做了简化,但是想更进一步更好的组织我们的代码,那么可以使用react-redux,当你使用了它之后,你不需要手动的写"),e("code",[s._v("dispatch")]),s._v(","),e("code",[s._v("subscribe")]),s._v(",以及"),e("code",[s._v("getState")]),s._v("了")]),s._v(" "),e("p",[s._v("因为它对内输入的逻辑(即外部的数据（即"),e("code",[s._v("state")]),s._v("对象）如何转换为 "),e("code",[s._v("UI")]),s._v(" 组件的参数,通过"),e("code",[s._v("mapStateToProps")]),s._v("),对外输出逻辑(即用户发出的动作如何变为 "),e("code",[s._v("Action")]),s._v(" 对象，从 "),e("code",[s._v("UI")]),s._v(" 组件传出去,通过"),e("code",[s._v("mapDispatchToProps")]),s._v(")")]),s._v(" "),e("p",[e("code",[s._v("react-redux")]),s._v("帮我们做了监听,获取"),e("code",[s._v("state")]),s._v("等工作,同时它提供了两个好用的"),e("code",[s._v("API")]),s._v(","),e("code",[s._v("Provider")]),s._v("和"),e("code",[s._v("connect")]),s._v(",在下文中我们会学习到的")]),s._v(" "),e("h2",{attrs:{id:"安装react-redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装react-redux"}},[s._v("#")]),s._v(" 安装react-redux")]),s._v(" "),e("p",[s._v("既然是一个第三方的模块,那么可以通过"),e("code",[s._v("npm")]),s._v("或者"),e("code",[s._v("yarn")]),s._v("的方式下载")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("npm install "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("save react"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("redux\n或\nyarn add react"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("redux\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("安装完成后,可以在根目录的"),e("code",[s._v("package.json")]),s._v("中查看是否有的")]),s._v(" "),e("p",[s._v("对于理解 "),e("code",[s._v("react-redux")]),s._v("中的 "),e("code",[s._v("Provider")]),s._v("和"),e("code",[s._v("connect")]),s._v(",有必要再次回顾一下之前学过的UI组件和容器组件")]),s._v(" "),e("h2",{attrs:{id:"ui组件-傻瓜组件-无状态组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ui组件-傻瓜组件-无状态组件"}},[s._v("#")]),s._v(" UI组件(傻瓜组件/无状态组件)")]),s._v(" "),e("p",[s._v("既然是一个第三方的模块,那么可以通过npm或者yarn的方式下载")]),s._v(" "),e("p",[e("code",[s._v("react-redux")]),s._v("将所有组件分成两大类："),e("code",[s._v("UI")]),s._v(" 组件（"),e("code",[s._v("presentational component")]),s._v("）和容器组件（"),e("code",[s._v("container component")]),s._v("）\n"),e("code",[s._v("UI")]),s._v(" 组件有以下几个特征")]),s._v(" "),e("ul",[e("li",[s._v("只负责 "),e("code",[s._v("UI")]),s._v(" 的呈现，不带有任何业务逻辑,")]),s._v(" "),e("li",[s._v("没有状态,"),e("code",[s._v("UI")]),s._v("的渲染通过外部的"),e("code",[s._v("props")]),s._v("传入（即不使用"),e("code",[s._v("this.state")]),s._v("这个变量)")]),s._v(" "),e("li",[s._v("所有数据都由参数（"),e("code",[s._v("this.props")]),s._v("）对象提供")]),s._v(" "),e("li",[s._v("不使用任何 "),e("code",[s._v("Redux")]),s._v(" 的 "),e("code",[s._v("API")]),s._v("\n如下所示, UI 组件的例子")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("Counter")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("num")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("h1"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" num "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("h1"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("因为不含有状态"),e("code",[s._v("state")]),s._v("，"),e("code",[s._v("UI")]),s._v(' 组件又称为"纯组件"，即它纯函数一样，输出的结果纯粹由参数决定它的值,给定的输入,便会有指定的输出,与'),e("code",[s._v("UI = render(data)")]),s._v("完全吻合")]),s._v(" "),e("h2",{attrs:{id:"容器组件-聪明组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器组件-聪明组件"}},[s._v("#")]),s._v(" 容器组件(聪明组件)")]),s._v(" "),e("p",[s._v("容器组件的特征与UI组件相反")]),s._v(" "),e("ul",[e("li",[s._v("负责管理数据和业务逻辑，不负责 "),e("code",[s._v("UI")]),s._v(" 的呈现")]),s._v(" "),e("li",[s._v("带有内部状态("),e("code",[s._v("state")]),s._v("）")]),s._v(" "),e("li",[s._v("使用 "),e("code",[s._v("Redux")]),s._v(" 的 API(下面会有具体的例子),比如:"),e("code",[s._v("dispatch")]),s._v(","),e("code",[s._v("getState")]),s._v(","),e("code",[s._v("subscribe")]),s._v("等")])]),s._v(" "),e("p",[s._v("总之："),e("strong",[s._v("UI 组件负责 UI 的呈现，容器组件负责管理数据和逻辑")])]),s._v(" "),e("p",[s._v("如果一个组件既有 "),e("code",[s._v("UI")]),s._v(" 又有业务逻辑，那怎么办？可以将它拆分成下面的结构：外面是一个容器组件，里面包了一个"),e("code",[s._v("UI")]),s._v(" 组件。前者负责与外部的通信，将数据传给后者，由后者渲染出视图。")]),s._v(" "),e("p",[s._v("这也是之前我们将"),e("code",[s._v("todolist")]),s._v("组件进行了容器组件和"),e("code",[s._v("UI")]),s._v("组件不断的拆分的方式.当然这种拆分因人而异,没有绝对的,太细粒度的拆分也会带来管理上的麻烦.不能为了拆分而拆分.")]),s._v(" "),e("p",[s._v("而 "),e("code",[s._v("react-redux")]),s._v("规定，所有的 "),e("code",[s._v("UI")]),s._v(" 组件都由用户提供，容器组件则是由 "),e("code",[s._v("react-redux")]),s._v("自动生成(下面的"),e("code",[s._v("connect")]),s._v("方法返回的结果就是容器组件)。也就是说，用户负责视觉层，状态管理则是全部交给它")]),s._v(" "),e("h2",{attrs:{id:"provider"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#provider"}},[s._v("#")]),s._v(" Provider")]),s._v(" "),e("p",[e("strong",[s._v("作用")]),s._v(": 它是一个组件,用于连接了"),e("code",[s._v("Store")]),s._v(",它把"),e("code",[s._v("store")]),s._v("提供给内部组件,接受"),e("code",[s._v("store")]),s._v("作为"),e("code",[s._v("props")]),s._v(",然后通过"),e("code",[s._v("context")]),s._v("往下传，这样"),e("code",[s._v("react")]),s._v("中任何组件都可以通过"),e("code",[s._v("context")]),s._v("获取"),e("code",[s._v("store")])]),s._v(" "),e("p",[s._v("只要被这个 "),e("code",[s._v("Provider")]),s._v("组件包裹了,那么它内部的子组件就有能力接收到"),e("code",[s._v("store")]),s._v("，内部的组件都有能力获取"),e("code",[s._v("store")]),s._v("的数据的")]),s._v(" "),e("p",[s._v("这样也就意味着我们可以在任何一个组件里利用 "),e("code",[s._v("dispatch(action)")]),s._v("来触发 "),e("code",[s._v("reducer")]),s._v("改变 "),e("code",[s._v("state")]),s._v("，并用 "),e("code",[s._v("subscribe")]),s._v("监听 "),e("code",[s._v("state")]),s._v("的变化，然后通过 "),e("code",[s._v("getState")]),s._v("来获取变化后的值。但是官方并不推荐这样做，它只会让数据流变的混乱，过度的耦合也会影响组件的复用，维护起来会更麻烦")]),s._v(" "),e("p",[e("strong",[e("code",[s._v("Provider")]),s._v("其实是对"),e("code",[s._v("Redux")]),s._v("中的"),e("code",[s._v("store")]),s._v("的"),e("code",[s._v("subscribe")]),s._v(","),e("code",[s._v("dispatch")]),s._v(","),e("code",[s._v("getState")]),s._v("的一个封装,集成.它对外暴露"),e("code",[s._v("props")]),s._v("属性,内部却已经帮我们实现了的"),e("code",[s._v("react-redux")]),s._v("提供 "),e("code",[s._v("Provider")]),s._v("组件，可以让容器组件拿到"),e("code",[s._v("state")])]),s._v("\n例如如下代码:")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" React "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" ReactDOM "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react-dom'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" TodoList "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./TodoList'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Provider "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react-redux"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从react-redux库中引入Provider")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" store "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./store'")]),s._v("                      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引入store")]),s._v("\n\n\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" container "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nReactDOM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Provider store"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过属性props的方式将store赋值给store,这样Provider组件就能接收到store中的数据,其内部的组件也可以拿到store中的状态")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("TodoList "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Provider"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    container"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("如果为了代码更好看点,也可以这样,定义一个变量的,以下这种写法与上面是等价的,"),e("code",[s._v("JSX")]),s._v("的内容可以看以前的内容")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" App "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Provider store"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("TodoList "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Provider"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" container "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nReactDOM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("container"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("这里需要注意的是:当你使用"),e("code",[s._v("React-Router")]),s._v(" 路由库时,与其他项目没有不同之处，也是使用"),e("code",[s._v("Provider")]),s._v("在"),e("code",[s._v("Router")]),s._v("外面包一层，因为"),e("code",[s._v("Provider")]),s._v("的唯一功能就是传入"),e("code",[s._v("store")]),s._v("对象\n如果不这样包裹着:内部的组件时接收不到"),e("code",[s._v("store")]),s._v("中的状态数据的,如下所示")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Provider store"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Router"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Route path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),s._v(" component"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Router"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Provider"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"connect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#connect"}},[s._v("#")]),s._v(" connect")]),s._v(" "),e("p",[e("strong",[s._v("作用")]),s._v(":"),e("code",[s._v("connect")]),s._v("顾名思义,是一个连接器,"),e("strong",[s._v("它是连接容器组件和UI(傻瓜)组件的")]),s._v(",它是 "),e("code",[s._v("react-redux")]),s._v("提供的一个方法,"),e("strong",[s._v("用于从 UI 组件生成容器组件,把两种组件给连接起来")])]),s._v(" "),e("p",[e("code",[s._v("connect")]),s._v("方法接收四个参数,一个是 "),e("code",[s._v("mapStateToProps")]),s._v(",另一个是"),e("code",[s._v("mapDispatchToProps")]),s._v(",当然还有两个参数: "),e("code",[s._v("mergeProps")]),s._v(", "),e("code",[s._v("options")]),s._v(",它们是可选的,它执行的结果依然是一个函数,所以才可以在后面在加上一个圆括号的,而圆括号内又接收一个参数,即是UI组件,也是傻瓜组件")]),s._v(" "),e("p",[s._v("有两次 "),e("code",[s._v("connect")]),s._v("的执行,第一次 "),e("code",[s._v("connect")]),s._v("函数的执行是从"),e("code",[s._v("react-redux")]),s._v("库中引入这个方法,第二次是把 "),e("code",[s._v("connect")]),s._v("函数返回的函数再次执行,最后产生的就是容器组件,如下代码所示")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" connect "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react-redux'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" VisibleTodoList "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("connect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TodoList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 命名成ContainerTodoList也是一样的")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("如果不给"),e("code",[s._v("connect")]),s._v("传递任何参数,可以为空,也可以指定参数"),e("code",[s._v("null")]),s._v(",或者只有"),e("code",[s._v("mapStateToProps")]),s._v(",没有"),e("code",[s._v("mapDispatchToProps")]),s._v(",这也是没有什么问题的,如下代码所示")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" connect "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react-redux'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" VisibleTodoList "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("connect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mapStateToProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TodoList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("在上面代码中，"),e("code",[s._v("TodoList")]),s._v("就是"),e("code",[s._v("UI")]),s._v("组件，而"),e("code",[s._v("VisibleTodoList")]),s._v("就是由 "),e("code",[s._v("React-Redux")]),s._v("通过"),e("code",[s._v("connect")]),s._v("方法自动生成的容器组件。\n但是，因为没有定义业务逻辑，上面这个容器组件毫无意义，只是 "),e("code",[s._v("UI")]),s._v("组件的一个单纯的包装层。为了定义业务逻辑，需要给出下面两方面的信息。")]),s._v(" "),e("ul",[e("li",[s._v("输入逻辑：外部的数据（即"),e("code",[s._v("state")]),s._v("对象）如何转换为 "),e("code",[s._v("UI")]),s._v(" 组件的参数(负责接收"),e("code",[s._v("state")]),s._v(")")]),s._v(" "),e("li",[s._v("输出逻辑：用户发出的动作如何变为 "),e("code",[s._v("Action")]),s._v(" 对象，从 "),e("code",[s._v("UI")]),s._v(" 组件传出去(负责派发动作"),e("code",[s._v("dispatch")]),s._v("方法)")])]),s._v(" "),e("p",[s._v("所以,"),e("code",[s._v("connect")]),s._v("的两个"),e("code",[s._v("API")]),s._v("如下所示:")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" connect "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'react-redux'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" VisibleTodoList "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("connect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mapStateToProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mapDispatchToProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("mergeProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TodoList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 命名成ContainerTodoList也是一样的")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("在上面代码中，"),e("code",[s._v("connect")]),s._v("方法接受四个参数：分别是 "),e("code",[s._v("mapStateToProps")]),s._v("和 "),e("code",[s._v("mapDispatchToProps")]),s._v(",后面两个参数 "),e("code",[s._v("mergeProps")]),s._v("，以及 "),e("code",[s._v("options")]),s._v("可以省略,这四个参数的名字可以是任意的,并不一定非得这样叫,也可以定义为 "),e("code",[s._v("mapState")]),s._v("或者 "),e("code",[s._v("mapDispatch")]),s._v(",只是这样命名,见名知意,已经是约定俗成的一个习惯")]),s._v(" "),e("p",[s._v("它们定义了"),e("code",[s._v("UI")]),s._v(" 组件的业务逻辑。前者负责输入逻辑("),e("code",[s._v("mapStateToProps")]),s._v(")，即将"),e("code",[s._v("state")]),s._v("映射到 "),e("code",[s._v("UI")]),s._v("组件的参数（"),e("code",[s._v("props")]),s._v("），后者负责输出逻辑("),e("code",[s._v("mapDispatchToProps")]),s._v(")，即将用户对 "),e("code",[s._v("UI")]),s._v("组件的操作映射成 "),e("code",[s._v("Action")])]),s._v(" "),e("p",[s._v("综归来说, "),e("code",[s._v("connect")]),s._v("做了两件事情:")]),s._v(" "),e("ul",[e("li",[s._v("把"),e("code",[s._v("store")]),s._v("上的状态转换为内层的UI组件(傻瓜组件)的props")]),s._v(" "),e("li",[s._v("把内层UI组件(无状态组件)中的用户触发的动作转化为派送个"),e("code",[s._v("store")]),s._v("的动作,前者("),e("code",[s._v("mapStateToProps")]),s._v(")是一个内层傻瓜组件对象的输入,后者("),e("code",[s._v("mapDispatchToProps")]),s._v(")内层傻瓜组件的输出\n"),e("code",[s._v("mapStateToProps")]),s._v("与"),e("code",[s._v("mapDispatchToProps")]),s._v("的工作套路就是:把"),e("code",[s._v("Store")]),s._v("上的状态转化为内层组件的"),e("code",[s._v("props")]),s._v("，然后在组件内部通过 "),e("code",[s._v("this.props")]),s._v("的方式拿到,这是不同于之前 "),e("code",[s._v("this.state")]),s._v("的方式的,其实就是一个映射关系。")])]),s._v(" "),e("h2",{attrs:{id:"mapstatetoprops-state-ownprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mapstatetoprops-state-ownprops"}},[s._v("#")]),s._v(" mapStateToProps(state, [ownProps])")]),s._v(" "),e("p",[e("code",[s._v("mapStateToProps")]),s._v("是一个函数。见名思义,它是建立一个从（外部的）"),e("code",[s._v("state")]),s._v("对象到（"),e("code",[s._v("UI")]),s._v(" 组件的）"),e("code",[s._v("props")]),s._v("对象的映射关系。")]),s._v(" "),e("p",[s._v("既然作为函数， "),e("code",[s._v("mapStateToProps")]),s._v("执行后应该返回一个对象，里面的每一个键值对就是一个映射")]),s._v(" "),e("p",[e("code",[s._v("mapStateToProps")]),s._v(" 接受两个参数,第一个是 "),e("code",[s._v("state")]),s._v(",第二个是 "),e("code",[s._v("ownProps")]),s._v(", "),e("code",[s._v("store")]),s._v("的 "),e("code",[s._v("state")]),s._v("和自定义的 "),e("code",[s._v("props")]),s._v("，并返回一个新的对象，这个对象会作为 "),e("code",[s._v("props")]),s._v("的一部分传入 ui组件。")]),s._v(" "),e("p",[s._v("我们可以根据组件所需要的数据自定义返回一个对象。"),e("code",[s._v("ownProps")]),s._v("的变化也会触发 "),e("code",[s._v("mapStateToProps")]),s._v(", "),e("code",[s._v("ownProps")]),s._v("代表容器组件的 "),e("code",[s._v("props")]),s._v("对象")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("mapStateToProps")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("state")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// state代表的是store中state的状态")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        inputValue"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("inputValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        list"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("list\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("在上面代码中， "),e("code",[s._v("mapStateToProps")]),s._v("是一个函数，它接受"),e("code",[s._v("state")]),s._v("作为参数，并且第一个参数就是 "),e("code",[s._v("state")]),s._v(", 它返回一个对象。这个对象有 "),e("code",[s._v("inputValue")]),s._v("和 "),e("code",[s._v("list")]),s._v("属性，它代表着 "),e("code",[s._v("UI")]),s._v(" 组件的同名参数，后面的 "),e("code",[s._v("state.inputValue")]),s._v("，以及 "),e("code",[s._v("state.list")]),s._v("就是从 "),e("code",[s._v("Store")]),s._v("中的 "),e("code",[s._v("state")]),s._v("的拿到内部组件输入框的值和底下列表的值")]),s._v(" "),e("p",[e("code",[s._v("mapStateToProps")]),s._v("会订阅 "),e("code",[s._v("Store")]),s._v("，每当 "),e("code",[s._v("state")]),s._v("更新的时候，就会自动执行，重新计算 UI 组件的参数，从而触发 UI 组件的重新渲染。")]),s._v(" "),e("h2",{attrs:{id:"mapdispatchtoprops-dispatch-ownprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mapdispatchtoprops-dispatch-ownprops"}},[s._v("#")]),s._v(" mapDispatchToProps(dispatch,[ownProps])")]),s._v(" "),e("p",[e("code",[s._v("mapDispatchToProps")]),s._v("是 "),e("code",[s._v("connect")]),s._v("函数的第二个参数，它是用来建立 "),e("code",[s._v("UI")]),s._v(" 组件的参数到 "),e("code",[s._v("store.dispatch")]),s._v("方法的映射。")]),s._v(" "),e("p",[s._v("换句话说，它定义了哪些用户的操作应该当作 "),e("code",[s._v("Action")]),s._v("，传给 "),e("code",[s._v("Store")]),s._v("。它可以是一个函数，也可以是一个对象。\n如果 "),e("code",[s._v("mapDispatchToProps")]),s._v("是一个函数，会得到 "),e("code",[s._v("dispatch")]),s._v("和 "),e("code",[s._v("ownProps")]),s._v("（容器组件的"),e("code",[s._v("props")]),s._v("对象）两个参数")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("mapDispatchToProps")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("dispatch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ownProps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleInputChange")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" action "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handle_input_change"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                value"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n       "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleAddContent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" action "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handle_add_content"')]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n       "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleDeleteList")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("index")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" action "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'handle_delete_list'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            index\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[s._v("从上面代码可以看到，"),e("code",[s._v("mapDispatchToProps")]),s._v("作为函数，应该返回一个对象，该对象的每个键值对都是一个映射，定义了 "),e("code",[s._v("UI")]),s._v(" 组件的参数怎样发出 "),e("code",[s._v("Action")]),s._v("。")]),s._v(" "),e("p",[s._v("如果 "),e("code",[s._v("mapDispatchToProps")]),s._v("是一个对象，那么会和 "),e("code",[s._v("store")]),s._v("绑定作为 "),e("code",[s._v("props")]),s._v("的一部分传入"),e("code",[s._v("ui")]),s._v("组件,它的每个键名也是对应 "),e("code",[s._v("UI")]),s._v(" 组件的同名参数,键值应该是一个函数，会被当作 "),e("code",[s._v("Action creator")]),s._v("，返回的 "),e("code",[s._v("Action")]),s._v("会由 "),e("code",[s._v("Redux")]),s._v(" 自动发出。举例来说，上面的 "),e("code",[s._v("mapDispatchToProps")]),s._v("写成对象,则如下所示:下面的函数是Es6的简写形式")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" mapDispatchTopProps "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleInputChange")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等价于handleInputChange: function(e){ ...}")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" action "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handle_input_change"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                value"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n       "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleAddContent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" action "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"handle_add_content"')]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n       "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("handleDeleteList")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("index")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" action "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            type"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'handle_delete_list'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            index\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[s._v("不论 "),e("code",[s._v("mapDispatchToProps")]),s._v("是对象还是函数，它最终都会返回一个对象，如果是函数，这个对象的 "),e("code",[s._v("key")]),s._v("值是可以自定义的")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mapDispatchToProps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      attrActions"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bindActionCreators")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("todoActionCreators"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dispatch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bindActionCreators是Redux的一个方法,会将action和dispatch绑定并返回一个对象，这个对象会和ownProps一起作为props的一部分传入ui组件")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("code",[s._v("mapDispatchToProps")]),s._v("返回的对象其属性其实就是一个个 "),e("code",[s._v("actionCreator")]),s._v("，因为已经和 "),e("code",[s._v("dispatch")]),s._v("绑定，所以当调用 "),e("code",[s._v("actionCreator")]),s._v("时会立即发送"),e("code",[s._v("action")]),s._v("，而不用手动"),e("code",[s._v("dispatch")])]),s._v(" "),e("p",[e("code",[s._v("mapStateToProps")]),s._v("和 "),e("code",[s._v("mapDispatchToProps")]),s._v("都可以包含第二个参数 "),e("code",[s._v("ownProps")]),s._v(","),e("code",[s._v("ownProps")]),s._v("的变化也会触发 "),e("code",[s._v("mapDispatchToProps")])]),s._v(" "),e("h2",{attrs:{id:"mergeprops-stateprops-dispatchprops-ownprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mergeprops-stateprops-dispatchprops-ownprops"}},[s._v("#")]),s._v(" mergeProps(stateProps, dispatchProps, ownProps)")]),s._v(" "),e("p",[e("strong",[s._v("作用")]),s._v(":它是 "),e("code",[s._v("connect")]),s._v("函数的第三个参数,将 "),e("code",[s._v("mapStateToProps()")]),s._v("与 "),e("code",[s._v("mapDispatchToProps()")]),s._v("返回的对象和组件自身的 "),e("code",[s._v("props")]),s._v("合并成新的 "),e("code",[s._v("props")]),s._v("并传入组件。默认返回 "),e("code",[s._v("Object.assign({}, ownProps, stateProps, dispatchProps)")]),s._v("的结果")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("mergeProps")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" Object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("assign")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ownProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stateProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dispatchProps"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[s._v("#")]),s._v(" options")]),s._v(" "),e("p",[s._v("当 "),e("code",[s._v("pure = true")]),s._v("表示 "),e("code",[s._v("connect")]),s._v("容器组件将在 "),e("code",[s._v("shouldComponentUpdate")]),s._v("中对 "),e("code",[s._v("store")]),s._v("的 "),e("code",[s._v("state")]),s._v("和"),e("code",[s._v("ownProps")]),s._v("进行浅对比，判断是否发生变化，优化性能。若为"),e("code",[s._v("false")]),s._v("则不对比")]),s._v(" "),e("p",[s._v("这个"),e("code",[s._v("options")]),s._v("有很多,具体可以参考 "),e("code",[s._v("react-redux")]),s._v("官方文档")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  context"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Object"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  pure"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" boolean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  areStatesEqual"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Function"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  areOwnPropsEqual"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Function"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  areStatePropsEqual"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Function"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  areMergedPropsEqual"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Function"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  forwardRef"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" boolean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"结语"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[s._v("#")]),s._v(" 结语")]),s._v(" "),e("p",[s._v("本文主要学习了如何使用 react-redux,使用 react-redux只是为了简化Redux的,不使用react-redux也没有问题,只是使用react-redux可以更简便的管理我们的状态,更好的组织我们的代码")]),s._v(" "),e("p",[s._v("但是随之而来的就是学习成本,得学习那些 Provider, connect等API的使用,这也是为什么这些框架令人蛋疼的原因,本以为学了React能搞事,但发现依旧还有一座山在等着你")]),s._v(" "),e("p",[s._v("什么解决异步问题react-thunk,react-saga等中间件,middleWare,路由react-router等")]),s._v(" "),e("p",[s._v("当然最新版本的React中已经有了React hooks,有了这个你可以替代Redux,或者react-redux,但是笔者认为,技术没有金弹或者银弹,适合业务的技术才是最好的\n理解redux以及react-redux不妨也是一种技术选择,更好的与React hooks做比较,从而选择一个最适宜的.")]),s._v(" "),e("p",[s._v("React很多东西很抽象 学习起来,就有些费劲~以后也会循序渐进,一一进行分享的\n最后,看完本节:记住几点")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("Provider")]),s._v("是一个由"),e("code",[s._v("react-redux")]),s._v("提供的组件,用于接收store的数据,供内部组件暴露的一个接口")]),s._v(" "),e("li",[s._v("connect是react-redux库提供的一个函数,用于连接UI组件的,并且最终生成一个容器组件,提供了一些映射方法,mapStateToProps以及mapDispatchToProps\n在"),e("code",[s._v("UI")]),s._v("组件内部的数据通过"),e("code",[s._v("this.props")]),s._v("来填充渲染")])])],1)}),[],!1,null,null,null);t.default=n.exports},630:function(s,t,a){s.exports=a.p+"assets/img/01-guide.c70dcfff.jpg"},631:function(s,t,a){s.exports=a.p+"assets/img/02-react-redux.aede3691.jpg"}}]);